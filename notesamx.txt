Dealer ID: 22557

Step 1. Develop touch panel file, will determine what programming for.

TP4
Design elements:
    Everything is a button or a container of buttons.
    A page is a container for popups and buttons.
    a Popup is a container for buttons and must reside on a page.
    A Button is every other design element (controls, text, images, video, etc)

    Must have at least one page, one at a time.
    Covers the entire screen area.
    Page flips (panel or code)
    Optional Features:
        Start page
        Inactivity page
        Channel/address

        Dimensions: 55x125 370x800

    Programming:
        Feedback:
            None
            Channel-follow same state as buttons.
            Inverted Channel- when in on state, off
            Always on- No off state.
            Momentary-shows all statuses of button when button pressed,
                      no actual control.
            Blink- it fucking blinks.
        Touch Panel:
            Channel codes-- always appear top left corner, always yellow.
            Triggers a button event.
            Level code- always bottom left, and purple.
            Address code- always bottom right, and teal.


Step 2. Generate Workspace file
Every Netlinx master is a system
Netlinx Studio:
    Workspace(USF-Workspace, etc.)
        Project (Main- Lib)
        Project (BioMedBlds)
            System (BioMedLab)
                -TP4 files
                -IR files
                -etc

Step 3. Defining devices in your code.
3 components to every device address: D:P:S / 5001:8:101 = Screen
Hungarian Notation, dvScreen
***Master's device number is always 0. *** (Device number)
AMX Controller device number typically 5001.  5001-5999.

dvmtMaster = 0
1-255 = Axlink
                   Axlink
/--------------------|---------------------\
|       1-95         | Keypads             |
/--------------------|---------------------\ 
|       96-127       | Boxes               |
/--------------------|---------------------\ 
|       128-255      |Axlink / Displate/TP |
/--------------------|---------------------\

NFX Frame - 10 card slot frame
Device number, dv# = ((start at 25)Card frame # x12) + slot #
Dip Switch calculates dv#

301-3072->  Netlinx cards

5001-5999-> controllers

6001-6999-> ICS Devices (LCD screen with keypads, or LCS LAN devices)

10,001-32,000-> Modero TP's (10128 first panel, all moderos have 100 ports)

------------Physical/Nonphysical--------------------|

32,001-32,767-> Dynamic Virtual Device (Netlinx Studio, your laptop)

33,001-36,863-> Virtual devices

41,001-42000-> Duet Virtual Devices

dvPolyCom (Codec) = 0:3:104
dvKeypads = 1:1:104 only use port 1
dvVOL3 = 96:1:104
dvHvAC (Axlink, and displate)= 128:1:104
dvLutron = 301:1:104
dvProjector = 301:2:104
dvSwitcher = 5001:2:104
dvAudioDSP = 5001:6:104
dvEXR_REL8 = 6001:1:104
dvPlasmatv = 6002:2:104
dvTP = 10001:100:104
dvTP_DVD = 100001:1:104
dvTP_SAT = 100001:4:104

x:x:0 means "this system"

4000 channels per port on AMX touch panel

ABC CBS NBC Fox CNN Weather    Last 0 Ent   Guide Menu Exit

AMX-PI: Where to go to find list of syntax commands for AMX products.


Wednesday~~~~~~~~~ Step 4. Code Design

Volatile memory.  64MB Volatile / 1MB Non-Volatile

Variable names: cannot start with number, cannot contain spaces, cannot container
special characters other than underscore.

TYPE_CAST() function in Netlinx handles poor float to int assignments.
nMyInt = TYPE_CAST(3.8888)

CHAR - Only store values between 1-255.
if CHAR = 255, CHAR++ = 0.
if CHAR = 32767, CHAR+++ = -32768

Non_volatile float fVolume[8] - 8 floats /-> managements of different rooms
Non_volatile float fEnv[5] 
Volatile float fMB_Temp
Volatile float fDining_Temp = 77.1

    1         2        3         4          5
---------.---------.--------.----------.------------.
 34.2    |  35.4   |  40.1  |          |  100.5     |
 --------.---------.--------.----------.------------.
 Kitchen   LivingRM    MB     Dining       Kids

fMB_Temp = fEnv[3]
fEnv[4] = fDining_Temp

---------.---------.--------.----------.------------. 
 89.1    |  88.2   |  90.2  |   32.2   |  88.4      | 
---------.---------.--------.----------.------------.
                Humidity Levels

Non_Volatile float fEnv[2][5] = 88.4

Volatile CHAR sMT_String[8]

Step 5. Configure the AMX ports for devices
SEND_COMMAND dvTP,"'PPON-dss'"

Pg. 228 Manual
EMBEDDED OBJECTS:
1. OBJECT ONLY EXIST AT THE MOMENT OF AN EVENT.
2. CAN ONLY USE OBJECTS INSIDE SAME EVENT TYPE. 
    I.E DATA_EVENT => DATA.DEVICE

When parsing strings, the first parameter is always the string you're 
parsing.  2nd parameter is position in array to start.

PROGRAM_NAME='MasterSource'

DEFINE_DEVICE
dvSERIAL_DVD = 5001:1:201
dvSWITCHER   = 5001:2:201
dvRELAYS     = 5001:8:201
dvIR_DVD     = 5001:9:201 //first I/O port is 9
dvIR_SAT     = 5001:10:201

dvTP         = 10001:1:201
dvKEYPAD     = 10001:3:201

#DEFINE MY_DEVICES

DEFINE_CONSTANT

DEFINE_TYPE

DEFINE_VARIABLE
VOLATILE INTEGER nIR_DVD_BTNS[]={
    1,2,3,4,5,6,7}
    VOLATILE INTEGER nSCREEN_BTNS[]={
        21,32,33}

DEFINE_LATCHING

DEFINE_MUTUALLY_EXCLUSIVE
        ([dvRELAYS,1]..[dvRELAYS,3])

#INCLUDE 'DSSexercise.axi'
#INCLUDE 'Levelsexercise.axi'
#INCLUDE 'Switcher.axi'
#INCLUDE 'TASCAM.axi'

        DEFINE_FUNCTION fnPULSE_RELAY(INTEGER nREL_NUMBER)
        {
                IF(nREL_NUMBER == 3)
                    {
                            PULSE[dvRELAYS,3]
                                }
                                    ELSE
                                        {
                                                SET_PULSE_TIME(25)
                                                    PULSE[dvRELAYS,nREL_NUMBER]
                                                        SET_PULSE_TIME(5)
                                                            }
        }
        DEFINE_START

        DEFINE_EVENT
        DATA_EVENT[dvIR_DVD]
        {
                ONLINE:
                    {
                            SEND_COMMAND dvIR_DVD,"'SET MODE IR'"
                                SEND_COMMAND dvIR_DVD,"'CTON',2"
                                    SEND_COMMAND dvIR_DVD,"'CTOF',3"
                                        SEND_COMMAND dvIR_DVD,"'CARON'"
                                            }
        }

        /*BUTTON_EVENT[dvTP,nIR_DVD_BTNS]
        {
                PUSH:
                    {
                            LOCAL_VAR INTEGER nBIC
                                nBIC = BUTTON.INPUT.CHANNEL
                                    SEND_COMMAND dvIR_DVD,"'SP',nBIC"
                                        SET_PULSE_TIME(10)
                                            PULSE[BUTTON.INPUT]
                                                SET_PULSE_TIME(5)
                                                    }
        } 
        */

        BUTTON_EVENT[dvTP, nSCREEN_BTNS]
        {
                PUSH:
                    {
                            LOCAL_VAR INTEGER nBIC
                                nBIC = (BUTTON.INPUT.CHANNEL - 30)
                                    fnPULSE_RELAY(nBIC)
                                        }
        }
        DEFINE_PROGRAM
        [dvTP,31] = ([dvRELAYS,1])
        [dvTP,32] = ([dvRELAYS,2])
        [dvTP,33] = ([dvRELAYS,3])

----------------------------DSS-------------------------|


PROGRAM_NAME='DSSexercise'
DEFINE_DEVICE
#IF_NOT_DEFINED MY_DEVICES
dvIR_SAT = 5001:10:201
dvTP     = 10001:1:0
#END_IF

DEFINE_CONSTANT
DEFINE_TYPE
DEFINE_VARIABLE
VOLATILE INTEGER nBIC

VOLATILE INTEGER nDSS_BTNS[]={
    10,11,12,13,14,15,16,17,18,19,20,21,
    44,45,46,47,48,49,50,105,235,
    1011,1012,1013,1014,1015,1016 }

    VOLATILE INTEGER nFAVS[]={
        507,509,504,505,562,635 }

        DEFINE_LATCHING
        DEFINE_MUTUALLY_EXCLUSIVE
        DEFINE_START
        DEFINE_EVENT
        DATA_EVENT[dvIR_SAT]
        {
                ONLINE: //when IR PORT 10 COMES ONLINE
                    {
                            SEND_COMMAND dvIR_SAT,"'SET MODE IR'"
                                SEND_COMMAND dvIR_SAT,"'CTON',2"
                                    SEND_COMMAND dvIR_SAT,"'CTOF',3"
                                        SEND_COMMAND dvIR_SAT,"'CARON'"
                                            SEND_COMMAND dvIR_SAT,"'XCHM-1'"
                                                }
        }

        BUTTON_EVENT[dvTP,nDSS_BTNS]
            {
                    PUSH:
                        {
                                    LOCAL_VAR INTEGER nCH_NUM
                                            nBIC = BUTTON.INPUT.CHANNEL
                                                    PULSE[BUTTON.INPUT]
                                                            IF(nBIC > 9 && nBIC < 50)
                                                                    {
                                                                                SEND_COMMAND dvIR_SAT,"'SP',nBIC"
                                                                                        }
                                                                                                ELSE IF(nBIC > 1000)
                                                                                                        {
                                                                                                                    nBIC = nBIC -1010
                                                                                                                            nCH_NUM = nFAVS[nBIC]
                                                                                                                                    SEND_COMMAND dvIR_SAT,"'XCH ',ITOA(nCH_NUM)"
                                                                                                                                            }
                                                                                                                                                    ELSE
                                                                                                                                                            {
                                                                                                                                                                        SWITCH(nBIC)
                                                                                                                                                                                {
                                                                                                                                                                                                CASE 50://EXIT
                                                                                                                                                                                                            {
                                                                                                                                                                                                                            SEND_COMMAND dvIR_SAT,"'SP',84"
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    CASE 105://GUIDE
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                SEND_COMMAND dvIR_SAT,"'SP',53"
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        CASE 235://PREVIOUS CHANNEL
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                    SEND_COMMAND dvIR_SAT,"'SP',55"
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                        }

--------------------------Switcher-----------|


PROGRAM_NAME='Switcher'

DEFINE_DEVICE
#IF_NOT_DEFINED MY_DEVICES
dvSWITCHER   = 5001:2:201
#END_IF

dvTP_SWITCHER = 10001:2:201
DEFINE_CONSTANT
DEFINE_TYPE
DEFINE_VARIABLE
VOLATILE CHAR sTO_SEND[8]
VOLATILE INTEGER nSELECTED_INPUT
VOLATILE INTEGER nSELECTED_OUTPUT
VOLATILE INTEGER nARRAY_OF_OUTPUTS[8]

VOLATILE INTEGER nINPUT_BTNS[]={
    101,102,103,104,105,106,107,108}
    VOLATILE INTEGER nOUTPUT_BTNS[]={
        201,202,203,204,205,206,207,208}

        DEFINE_EVENT

        DATA_EVENT[dvSWITCHER]
        {
                ONLINE://WHEN SERIAL PORT 2 ONLINE..
                    {
                            SEND_COMMAND dvSWITCHER,"'SET BAUD 9600,N,8,1 485 DISENABLE'"
                                }
        }
        BUTTON_EVENT[dvTP_SWITCHER,nINPUT_BTNS]
        {
                PUSH://ANY INPUT BTN
                    {
                            nSELECTED_INPUT = BUTTON.INPUT.CHANNEL - 100
                                sTO_SEND = "'CL0I',ITOA(nSELECTED_INPUT),'O'"
                                    }
        }

        BUTTON_EVENT[dvTP_SWITCHER,nOUTPUT_BTNS]
        {
                PUSH://ANY OUTPUT BTN
                    {
                            nSELECTED_OUTPUT = BUTTON.INPUT.CHANNEL - 200
                                sTO_SEND = "sTO_SEND,ITOA(nSELECTED_OUTPUT),'T'"
                                    SEND_STRING dvSWITCHER, "sTO_SEND"
                                        }
        }
        DEFINE_PROGRAM
        [dvTP_SWITCHER,101] = (nSELECTED_INPUT == 1)
        [dvTP_SWITCHER,102] = (nSELECTED_INPUT == 2)
        [dvTP_SWITCHER,103] = (nSELECTED_INPUT == 3)
        [dvTP_SWITCHER,104] = (nSELECTED_INPUT == 4)
        [dvTP_SWITCHER,105] = (nSELECTED_INPUT == 5)
        [dvTP_SWITCHER,106] = (nSELECTED_INPUT == 6)
        [dvTP_SWITCHER,107] = (nSELECTED_INPUT == 7)
        [dvTP_SWITCHER,108] = (nSELECTED_INPUT == 8)
        [dvTP_SWITCHER,201] = (nSELECTED_OUTPUT == 1)
        [dvTP_SWITCHER,202] = (nSELECTED_OUTPUT == 2)
        [dvTP_SWITCHER,203] = (nSELECTED_OUTPUT == 3)
        [dvTP_SWITCHER,204] = (nSELECTED_OUTPUT == 4)
        [dvTP_SWITCHER,205] = (nSELECTED_OUTPUT == 5)
        [dvTP_SWITCHER,206] = (nSELECTED_OUTPUT == 6)
        [dvTP_SWITCHER,207] = (nSELECTED_OUTPUT == 7)
        [dvTP_SWITCHER,208] = (nSELECTED_OUTPUT == 8)

-------------------------Levels---------------------|

PROGRAM_NAME='Levelsexercise'
DEFINE_DEVICE
#IF_NOT_DEFINED MY_DEVICES
dvKEYPAD = 10001:3:201
dvTP= 10001:1:201
#END_IF


DEFINE_CONSTANT
DVD        = 1
SIRIUS     = 2
iPOD       = 3
DSS        = 4
LIGHT_MODE = 5
TEMP_MODE  = 6
AUDIO_MODE = 7

DEFINE_TYPE
DEFINE_VARIABLE
NON_VOLATILE INTEGER nVOL_LVL
NON_VOLATILE INTEGER nMODE_NUM
NON_VOLATILE INTEGER nAUDIO_SOURCE
NON_VOLATILE INTEGER nLIGHT_LEVEL
NON_VOLATILE INTEGER nTEMPERATURE
NON_VOLATILE INTEGER nZONE2LIGHTS
NON_VOLATILE INTEGER nZONE2_PRESET
VOLATILE INTEGER nKEYPAD_BTNS[]={
    1,2,3,4,5,6 }
    VOLATILE FLOAT fINC_LVL
    NON_VOLATILE FLOAT fTEMP_LEVEL
    NON_VOLATILE FLOAT fLIGHT_LVL

DEFINE_LATCHING

    DEFINE_MUTUALLY_EXCLUSIVE
    DEFINE_FUNCTION fnUPDATE_PANEL()
    {
            SELECT
                {
                        ACTIVE (nMODE_NUM == AUDIO_MODE):
                            {
                                        SEND_LEVEL dvKEYPAD,2,nVOL_LVL
                                                SEND_LEVEL dvTP,1,nVOL_LVL
                                                    }
                                                        ACTIVE (nMODE_NUM == LIGHT_MODE):
                                                            {
                                                                        SEND_LEVEL dvKEYPAD,2,(TYPE_CAST(nLIGHT_LEVEL*2.55))
                                                                                SEND_LEVEL dvTP,1,(TYPE_CAST(nLIGHT_LEVEL*2.55))
                                                                                        SEND_STRING 0,"'LIGHT LEVEL IS: ',(TYPE_CAST(nLIGHT_LEVEL*2.55))"
                                                                                            }
                                                                                                ACTIVE (nMODE_NUM == TEMP_MODE):
                                                                                                    {
                                                                                                                SEND_LEVEL dvKEYPAD,2,(TYPE_CAST(nTEMPERATURE-60)*12.75)
                                                                                                                        SEND_LEVEL dvTP,1,(TYPE_CAST(nTEMPERATURE-60)*12.75)
                                                                                                                            }
                                                                                                                                }
                                                                                                                                    SEND_LEVEL dvTP,1,LEVEL.VALUE
    }

    DEFINE_START
    nZONE2_PRESET = 128

    DEFINE_EVENT
    DATA_EVENT[dvKEYPAD]
    {
            ONLINE://WHEN TP PORT 3 COMES ONLINE
                {
                        SEND_COMMAND DATA.DEVICE,"'ADBEEP'"
                            }
    }
    BUTTON_EVENT[dvTP,61]
    {
            PUSH:
                {
                        TO[BUTTON.INPUT]
                            IF(nZONE2LIGHTS < 255)
                                {
                                            nZONE2LIGHTS++
                                                }
                                                    }
                                                        HOLD[1,REPEAT]:
                                                            {
                                                                    IF(nZONE2LIGHTS < 255)
                                                                        {
                                                                                    nZONE2LIGHTS++
                                                                                        }
                                                                                            }
    }
    BUTTON_EVENT[dvTP,62]
    {
            PUSH:
                {
                        TO[BUTTON.INPUT]
                            IF(nZONE2LIGHTS>0)
                                {
                                            nZONE2LIGHTS--
                                                }
                                                    }
                                                        HOLD[1,REPEAT]:
                                                            {
                                                                    IF(nZONE2LIGHTS>0)
                                                                        {
                                                                                    nZONE2LIGHTS--
                                                                                        }
                                                                                            }
    }
    BUTTON_EVENT[dvTP,63]
    {
            PUSH:
                {
                        TO[BUTTON.INPUT]
                            }
                                HOLD[20]:
                                    {
                                            nZONE2_PRESET = nZONE2LIGHTS
                                                }
                                                    RELEASE:
                                                        {
                                                                nZONE2LIGHTS =nZONE2_PRESET
                                                                    SEND_COMMAND dvTP,"'ADBEEP'"
                                                                        }
    }
    BUTTON_EVENT[dvKEYPAD,nKEYPAD_BTNS]
    {
            PUSH://ANY BTN ON MET6N
                {
                        LOCAL_VAR INTEGER nBIC
                            nBIC = BUTTON.INPUT.CHANNEL
                                IF(nBIC < 5)
                                    {
                                                nMODE_NUM = AUDIO_MODE
                                                        nAUDIO_SOURCE = nBIC
                                                            }
                                                                ELSE IF(nBIC == 5)
                                                                    {
                                                                                nMODE_NUM = LIGHT_MODE
                                                                                    }
                                                                                        ELSE //(nBIC == 6)
                                                                                            {
                                                                                                        nMODE_NUM = TEMP_MODE
                                                                                                            }
                                                                                                                fnUPDATE_PANEL()
                                                                                                                    }
    }
    LEVEL_EVENT[dvKEYPAD,2]
    {
            fINC_LVL = LEVEL.VALUE
                SWITCH(nMODE_NUM)
                    {
                            CASE AUDIO_MODE:
                                {
                                            nVOL_LVL = LEVEL.VALUE
                                                    SEND_COMMAND dvTP,"'^TXT-52,0,',ITOA(nVOL_LVL)"
                                                        }
                                                            CASE LIGHT_MODE:
                                                                {
                                                                            fLIGHT_LVL = ((fINC_LVL / 2.55))
                                                                                    nLIGHT_LEVEL = TYPE_CAST(fLIGHT_LVL)
                                                                                            SEND_COMMAND dvTP,"'^TXT-52,0,',ITOA(nLIGHT_LEVEL)"
                                                                                                }
                                                                                                    CASE TEMP_MODE:
                                                                                                        {
                                                                                                                    fTEMP_LEVEL = (((fINC_LVL/255)*20)+60)
                                                                                                                            nTEMPERATURE = TYPE_CAST(E:
                                                                                                                                {
                                                                                                                                        nZONE2LIGHTS =nZONE2_PRESET
                                                                                                                                            SEND_COMMAND dvTP,"'ADBEEP'"
                                                                                                                                                }
                                                                                                        }
                                                                                                        BUTTON_EVENT[dvKEYPAD,nKEYPAD_BTNS]
                                                                                                        {
                                                                                                                PUSH://ANY BTN ON MET6N
                                                                                                                    {
                                                                                                                            LOCAL_VAR INTEGER nBIC
                                                                                                                                **DBEEP'"
                                                                                                                                    }
                                                                                                        }
                                                                                                        BUTTON_EVENT[dvKEYPAD,nKEYPAD_BTNS]
                                                                                                        {
                                                                                                                  H://ANY BTN ON MET6N
                                                                                                                      {
                                                                                                                            LOCAL_VAR INTEGER nBIC
                                                                                                                                nBIC = **TON.INPUT.CHANNEL
                                                                                                                                    IF(nBIC < 5)
                                                                                                                                        {
                                                                                                                                                    nMODE_NUM = AUDIO_MOEF
                                                                                                                                                            nAUDIO_SOURCE = nBIC
                                                                                                                                                                }
                                                                                                                                                                    ELSE IF(nBIC == 5)
                                                                                                                                                                        {
                                                                                                                                                                                    nM[dE_NUM = LIGHT_MODE
                                                                                                                                                                                        }
                                                                                                                                                                                            ELSE //(nBIC == 6)
                                                                                                                                                                                                {
                                                                                                                                                                                                            nMODE_NUM E)EMP_MODE
                                                                                                                                                                                                                }
                                                                                                                                                                                                                    fnUPDATE_PANEL()
                                                                                                                                                                                                                        }
                                                                                                        }
                                                                                                        LEVEL_EVENT[dvKEYPAD,2]O_
                                                                                                            fINC_LVL = LEVEL.VALUE
                                                                                                                SWITCH(nMODE_NUM)
                                                                                                                    {
                                                                                                                            CASEUDUDIO_MODE:
                                                                                                                                {
                                                                                                                                            nVOL_LVL = LEVEL.VALUE
                                                                                                                                                    SEND_COMMAND d AP,"'^TXT-52,0,',ITOA(nVOL_LVL)"
                                                                                                                                                        }
                                                                                                                                                            CASE LIGHT_MODE:
                                                                                                                                                                {
                                                                                                                                                                            ,6IGHT_LVL = ((fINC_LVL / 2.55))
                                                                                                                                                                                    nLIGHT_LEVEL = TYPE_CAST(**IGHT_LVL)
                                                                                                                                                                                            SEND_COMMAND dvTP,"'^TXT-52,0,',ITOA(nLIGHT_LEOGL)"
                                                                                                                                                                                                }
                                                                                                                                                                                                    CASE TEMP_MODE:
                                                                                                                                                                                                        {
                                                                                                                                                                                                                    fTEMP_LEVEL = (((fINC_LVL/255OW20)+60)
                                                                                                                                                                                                                            nTEMPERATURE = TYPE_CAST(E:
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                        nZONE2LIGHTS **ZONE2_PRESET
                                                                                                                                                                                                                                            SEND_COMMAND 
